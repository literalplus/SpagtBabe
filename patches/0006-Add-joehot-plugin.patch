From c42ef1a2cc4fc61d8717524363bf47dcd6ce7aa3 Mon Sep 17 00:00:00 2001
From: xxyy <devnull@nowak-at.net>
Date: Wed, 12 Mar 2014 23:02:55 +0100
Subject: [PATCH 6/8] Add joehot plugin

Signed-off-by: xxyy <devnull@nowak-at.net>
---
 plugins/joehot.py | 72 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 72 insertions(+)
 create mode 100644 plugins/joehot.py

diff --git a/plugins/joehot.py b/plugins/joehot.py
new file mode 100644
index 0000000..1f3ddfb
--- /dev/null
+++ b/plugins/joehot.py
@@ -0,0 +1,72 @@
+#Based on an implementation by LaxWasHere
+#Current implementation by Literallie
+from cloudbot import hook
+import random
+import requests
+
+QUOTE_SOURCE = "http://git.yawk.at/?p=jhq-server.git;a=blob_plain;f=joehot.qt.txt;hb=refs/heads/gh-pages"
+
+joehots = []
+
+@hook.command(autohelp=False)
+def joehot(inp, notice=None):
+    """joehot [command] - joehot quote service.
+    Available commands: reload, count, source, purpose, plugin, [quote id].
+    Pass no arguments for a random quote."""
+
+
+    if "reload" in inp:
+        notice("Reloading quotes!")
+        suc = refetch_quotes()
+        notice("Successfully reloaded quotes!" if suc else "Failed reloading quotes!")
+        notice(str(len(joehots)) + " quotes loaded.")
+        return
+    elif "count" in inp:
+        return str(len(joehots)) + " quotes loaded."
+    elif "source" in inp:
+        return "See all the quotes at %s. (Spoiler alert!)" % QUOTE_SOURCE
+    elif "plugin" in inp:
+        return "Want these quotes on your Spigot server? Get the official plugin here: https://github.com/Spagt/joehot200-Quote-Generator-Pro"
+    elif "purpose" in inp:
+        return "These quotes are solely intended for information about joehot200. This service is not intended to make fun of him. Any usage for such purpose is abuse."
+    elif inp.isdigit():
+        index = int(inp) - 1  # Match line numbers
+        try:
+            choice = joehots[index]
+        except IndexError:
+            return "I'm sorry, but I could not find a quote at this index: " + inp
+    else:
+        index = random.randint(0, len(joehots))
+        try:
+            choice = joehots[index]
+        except IndexError:
+            notice("Internal error: Quote #%s vanished. Trying new one-" % index)
+            return joehot("")
+
+    if "#" in choice:
+        choice = choice[:choice.index("#")]
+
+    if "::" in choice:
+        name = choice[:choice.index("::")] #Find name
+        choice = choice[choice.index("::") + 2:] #Strip name form output
+    else:
+        name = "joehot200"
+
+    if choice == "":
+        return joehot("")
+
+    return u'\x0309(#%d) \x03"%s" \x0308--%s' % (index + 1, choice, name)  # Match line numbers
+
+def refetch_quotes():
+    """ Re-fetches the database from upstream"""
+    global joehots
+
+    try:
+        r = requests.get(QUOTE_SOURCE)
+        joehots = [line.strip() for line in r.text.split("\n")]
+        return True
+    except requests.exceptions.RequestException as err:
+        print(err)
+        return False
+
+refetch_quotes()
-- 
2.5.2

